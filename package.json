{
  "name": "commit-smith",
  "displayName": "CommitSmith",
  "description": "Forge high-quality commits with Codex-assisted workflows.",
  "version": "0.0.6",
  "publisher": "epicsmith",
  "license": "MIT",
  "main": "./dist/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/pezzos/commitsmith.git"
  },
  "scripts": {
    "compile": "tsc -p .",
    "test:unit": "npm run compile && node ./scripts/test-unit-placeholder.mjs",
    "test:config": "npm run compile && node ./scripts/test-config.mjs",
    "test:git": "node --loader ts-node/esm ./scripts/test-git.ts",
    "test:codex": "node --loader ts-node/esm ./scripts/test-codex.ts",
    "test:journal": "npm run compile && node ./scripts/test-journal.mjs",
    "test:pipeline": "npm run compile && node ./scripts/test-pipeline.mjs",
    "test:integration": "npm run compile && node ./scripts/test-integration.mjs",
    "test:dry-run": "npm run compile && node ./scripts/test-dry-run.mjs",
    "test:offline": "npm run compile && node ./scripts/test-offline.mjs",
    "lint": "echo \"No linting configured yet\""
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:.git",
    "onCommand:commitSmith.initializeRepo",
    "onCommand:commitSmith.codexBootstrap"
  ],
  "bin": {
    "commit-smith": "./bin/commit-smith.js"
  },
  "contributes": {
    "configuration": {
      "title": "CommitSmith",
      "properties": {
        "commitSmith.format.command": {
          "type": "string",
          "default": "npm run format:fix",
          "description": "Command used to format source files before committing."
        },
        "commitSmith.typecheck.command": {
          "type": "string",
          "default": "npm run typecheck",
          "description": "Command executed for type-checking."
        },
        "commitSmith.tests.command": {
          "type": "string",
          "default": "npm test -- -w",
          "description": "Command that runs the project test suite."
        },
        "commitSmith.pipeline.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable the automated pre-commit pipeline."
        },
        "commitSmith.pipeline.maxAiFixAttempts": {
          "type": "number",
          "default": 2,
          "minimum": 0,
          "description": "Maximum number of Codex fix attempts per pipeline step."
        },
        "commitSmith.pipeline.abortOnFailure": {
          "type": "boolean",
          "default": true,
          "description": "Abort the pipeline when a step remains failing after AI fixes."
        },
        "commitSmith.commit.pushAfter": {
          "type": "boolean",
          "default": false,
          "description": "Automatically push changes after a successful commit."
        },
        "commitSmith.message.style": {
          "type": "string",
          "enum": ["conventional", "plain"],
          "default": "conventional",
          "description": "Commit message style generated by Codex."
        },
        "commitSmith.message.enforce72": {
          "type": "boolean",
          "default": true,
          "description": "Ensure commit subject lines stay within 72 characters."
        },
        "commitSmith.jira.fromBranch": {
          "type": "boolean",
          "default": true,
          "description": "Derive ticket identifiers from the current branch name."
        },
        "commitSmith.codex.model": {
          "type": "string",
          "default": "gpt-5-codex",
          "description": "Codex model identifier used for commit writing."
        },
        "commitSmith.codex.endpoint": {
          "type": "string",
          "default": "http://localhost:9999",
          "description": "Codex API endpoint."
        },
        "commitSmith.codex.timeoutMs": {
          "type": "number",
          "default": 10000,
          "minimum": 1,
          "description": "Codex request timeout in milliseconds before falling back offline."
        }
      }
    },
    "commands": [
      {
        "command": "commitSmith.generateFromJournal",
        "title": "CommitSmith: AI Commit (Journal)",
        "shortTitle": "⚒️",
        "icon": "$(tools)",
        "category": "CommitSmith"
      },
      {
        "command": "commitSmith.clearJournal",
        "title": "CommitSmith: Clear Journal",
        "category": "CommitSmith"
      },
      {
        "command": "commitSmith.installHooks",
        "title": "CommitSmith: Install Hooks",
        "category": "CommitSmith"
      },
      {
        "command": "commitSmith.dryRun",
        "title": "CommitSmith: Dry Run (Coming Soon)",
        "category": "CommitSmith"
      },
      {
        "command": "commitSmith.initializeRepo",
        "title": "CommitSmith: Initialize CommitSmith",
        "category": "CommitSmith"
      },
      {
        "command": "commitSmith.codexBootstrap",
        "title": "CommitSmith: Run Codex Onboarding",
        "category": "CommitSmith"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "commitSmith.generateFromJournal",
          "group": "navigation@1",
          "when": "scmProvider == git"
        }
      ]
    }
  },
  "devDependencies": {
    "@types/node": "^18.19.0",
    "@types/vscode": "^1.85.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "ajv": "^8.12.0",
    "minimatch": "^9.0.3",
    "yaml": "^2.4.1"
  }
}
